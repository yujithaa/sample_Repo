# This is a basic workflow to help you get started with Actions

name: CI  #Optional - The name of the workflow as it will appear in the "Actions" tab of the GitHub repository.

run-name: ${{ github.actor }} is learning GitHub Actions  #Optional - The name for workflow runs generated from the 
#workflow, which will appear in the list of workflow runs on your repository's "Actions" tab. This example uses an 
#expression with the github context to display the username of the actor that triggered the workflow run. For more 
#information, see "Workflow syntax for GitHub Actions."

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs: #Groups together all the jobs that run in the CI workflow # This workflow contains a job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest  #Configures the job to run on the latest version of an Ubuntu Linux runner. 
                            #This means that the job will execute on a fresh virtual machine hosted by GitHub.
    environment: test
    concurrency: test
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
  print-username:
      runs-on: ubuntu-latest

      steps:
        - name: Print the input name to STDOUT
          run: echo The username is ${{ inputs.username }}
   
  printing:
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        run: echo Hello, world!

  testing:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      # Runs a single command using the runners shell
    - name: Run a one-line script
      run: echo Hello, world!

      # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
          echo Add other actions to build,
          echo test, and deploy your project.
 
  testing2:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      # Runs a single command using the runners shell
    - name: Run a multi line shell script
      run: |
        #!/bin/bash        
        echo "File name is Shell_Script.sh"
        Data=banana
        Rs=6
        echo "A $Data costs just $Rs"
        target=deploy
        env=preview
        echo "Running build target $target for environment $env"
        
        case $target in 
        "Deploy" | "deploy") echo -n "Deploying the code";;
        *) target=Default;; esac
        
        echo $target

  testing_shell_call:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      # Runs a single command using the runners shell
    - name: calling a shell script
      run: bash ./Shell_script_testing.sh apple 5 banana 8 "Fruit Basket" cake deploy preview

  testing_cake_call:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
        # Runs a single command using the runners shell
      - name: calling a shell script
        run: |
          cake.cmd
          cake deploy preview
          exit
    
    
    
